/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carparkingapp;

import gnu.io.CommPortIdentifier;
import java.util.Enumeration;
import javax.swing.JOptionPane;

/**
 *
 * @author chamal
 */
public class settings extends javax.swing.JFrame {

    /**
     * Creates new form settings
     */
    public static String selectedComPort;
    public static int selectedStatus = 0;

    public settings() {
        initComponents();

        try {
            loadComPorts();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Unable to load COMM Ports", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comPortCMB = new javax.swing.JComboBox();
        applyBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Settings");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Select COM port");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 30));

        getContentPane().add(comPortCMB, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 160, 30));

        applyBtn.setText("Apply changes");
        applyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyBtnActionPerformed(evt);
            }
        });
        getContentPane().add(applyBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 400, -1));

        setSize(new java.awt.Dimension(444, 302));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void applyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyBtnActionPerformed

        selectedComPort = (String) comPortCMB.getSelectedItem();
        JOptionPane.showMessageDialog(rootPane, "Settings saved successfully", "Settings saved", JOptionPane.INFORMATION_MESSAGE);
        selectedStatus = 1;
        this.dispose();

    }//GEN-LAST:event_applyBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new settings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyBtn;
    private javax.swing.JComboBox comPortCMB;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    private void loadComPorts() {
        try {
            Enumeration ports = CommPortIdentifier.getPortIdentifiers();

            while (ports.hasMoreElements()) {
                comPortCMB.addItem(((CommPortIdentifier) ports.nextElement()).getName());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Unable to load COM Ports", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

}
