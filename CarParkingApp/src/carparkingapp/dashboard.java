/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carparkingapp;

import static carparkingapp.dashboard.monitorThread;
import classes.runSerial;
import java.awt.Color;
import java.awt.Image;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author chamal
 */
public class dashboard extends javax.swing.JFrame {

    static int monitorStatus = 0;
    static int s1=0,s2=0,s3=0,s4=0,avb=0,nAvb=0;
    public static Thread monitorThread;
    static Image avbImg, nAvbImg;

    public dashboard() {
        initComponents();

        appStatusLbl.setBackground(new Color(211, 84, 0));
        appStatusLbl.setOpaque(true);
        appStatusLbl.setText(" Offline");

        try {
            avbImg = ImageIO.read(getClass().getResource("/images/slot_avb.png"));
            nAvbImg = ImageIO.read(getClass().getResource("/images/slot_navb.png"));
        } catch (IOException ex) {
            
        }
        
        stopMI.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        s4Lbl = new javax.swing.JLabel();
        s1Lbl = new javax.swing.JLabel();
        s2Lbl = new javax.swing.JLabel();
        s3Lbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        appStatusLbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        avbCountLbl = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nAvbCountLbl = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        settingsMI = new javax.swing.JMenuItem();
        exitMI = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        startMI = new javax.swing.JMenuItem();
        stopMI = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        s4Lbl.setForeground(new java.awt.Color(204, 255, 102));
        s4Lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_avb.png"))); // NOI18N
        s4Lbl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(s4Lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 100, 140));

        s1Lbl.setForeground(new java.awt.Color(51, 204, 0));
        s1Lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_avb.png"))); // NOI18N
        s1Lbl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(s1Lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 80, 100, 140));

        s2Lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_avb.png"))); // NOI18N
        s2Lbl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(s2Lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 100, 140));

        s3Lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_avb.png"))); // NOI18N
        s3Lbl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(s3Lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 100, 140));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Slot 2");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, 40, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Slot 3");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, 40, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Slot 4");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 240, 40, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Slot 1");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 40, -1));

        appStatusLbl.setBackground(new java.awt.Color(255, 102, 51));
        appStatusLbl.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        appStatusLbl.setForeground(new java.awt.Color(255, 255, 255));
        appStatusLbl.setText(" Offline");
        appStatusLbl.setPreferredSize(new java.awt.Dimension(43, 19));
        getContentPane().add(appStatusLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 70, 30));

        jLabel5.setText("Available slots:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, 90, 20));

        avbCountLbl.setText("N/A");
        getContentPane().add(avbCountLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 300, 20, 20));

        jLabel7.setText("Not vailable slots:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 330, -1, 20));

        nAvbCountLbl.setText("N/A");
        getContentPane().add(nAvbCountLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 330, 20, 20));

        jMenu1.setText("File");

        settingsMI.setText("Settings");
        settingsMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsMIActionPerformed(evt);
            }
        });
        jMenu1.add(settingsMI);

        exitMI.setText("Exit");
        exitMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMIActionPerformed(evt);
            }
        });
        jMenu1.add(exitMI);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Monitoring");

        startMI.setText("Start");
        startMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startMIActionPerformed(evt);
            }
        });
        jMenu2.add(startMI);

        stopMI.setText("Stop");
        stopMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopMIActionPerformed(evt);
            }
        });
        jMenu2.add(stopMI);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(645, 453));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMIActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitMIActionPerformed

    private void settingsMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsMIActionPerformed
        settings setView = new settings();
        setView.setVisible(true);
    }//GEN-LAST:event_settingsMIActionPerformed

    private void startMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startMIActionPerformed

        if (settings.selectedStatus == 1) {
            monitorStatus = 1;
            stopMI.setEnabled(true);
            startMI.setEnabled(false);
            runMonitoring();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Select a COM port to start", "COM port isn't selected", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_startMIActionPerformed

    private void stopMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopMIActionPerformed
        monitorStatus = 0;
        stopMI.setEnabled(false);
        startMI.setEnabled(true);
        
        s1Lbl.setIcon(new ImageIcon(avbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        s2Lbl.setIcon(new ImageIcon(avbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        s3Lbl.setIcon(new ImageIcon(avbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        s4Lbl.setIcon(new ImageIcon(avbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        
        avbCountLbl.setText("N/A");
        nAvbCountLbl.setText("N/A");
        
    }//GEN-LAST:event_stopMIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel appStatusLbl;
    private javax.swing.JLabel avbCountLbl;
    private javax.swing.JMenuItem exitMI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel nAvbCountLbl;
    private javax.swing.JLabel s1Lbl;
    private javax.swing.JLabel s2Lbl;
    private javax.swing.JLabel s3Lbl;
    private javax.swing.JLabel s4Lbl;
    private javax.swing.JMenuItem settingsMI;
    private javax.swing.JMenuItem startMI;
    private javax.swing.JMenuItem stopMI;
    // End of variables declaration//GEN-END:variables

    private void runMonitoring() {

        try {
            new Thread(new Runnable() {

                @Override
                public void run() {

                    if (monitorStatus == 1) {
                        appStatusLbl.setBackground(new Color(52, 152, 219));
                        appStatusLbl.setOpaque(true);
                        appStatusLbl.setText(" Online");
                    }

                    try {
                        
                        classes.runSerial.mySystem();
                        
                        while (monitorStatus == 1) {
                            System.out.println("Run");

                            String dataPattern = "";
                            dataPattern = runSerial.sDataPattern;
                            
                            System.out.println(dataPattern.length());
                            
                            if(dataPattern.length()==11){
                                setUpDashboard(dataPattern);
                            }
                            
                            runSerial.sDataPattern="";
                            Thread.sleep(1000);

                            if (monitorStatus == 0) {
                                appStatusLbl.setBackground(new Color(211, 84, 0));
                                appStatusLbl.setOpaque(true);
                                appStatusLbl.setText(" Offline");
                                break;
                            }
                        }

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }
            }).start();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void setUpDashboard(String dataPattern){
        
        String dataArray[] = dataPattern.split(",");
        
        s1 = Integer.parseInt(dataArray[0]);
        s2 = Integer.parseInt(dataArray[1]);
        s3 = Integer.parseInt(dataArray[2]);
        s4 = Integer.parseInt(dataArray[3]);
        avb = Integer.parseInt(dataArray[4]);
        nAvb = Integer.parseInt(dataArray[5]);
        
        if(s1==1){
            s1Lbl.setIcon(new ImageIcon(nAvbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        }else{
            s1Lbl.setIcon(new ImageIcon(avbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        }
        
        if(s2==1){
            s2Lbl.setIcon(new ImageIcon(nAvbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        }else{
            s2Lbl.setIcon(new ImageIcon(avbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        }
        
        if(s3==1){
            s3Lbl.setIcon(new ImageIcon(nAvbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        }else{
            s3Lbl.setIcon(new ImageIcon(avbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        }
        
        if(s4==1){
            s4Lbl.setIcon(new ImageIcon(nAvbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        }else{
            s4Lbl.setIcon(new ImageIcon(avbImg.getScaledInstance(100, 140, Image.SCALE_SMOOTH)));
        }
        
        avbCountLbl.setText(avb+"");
        nAvbCountLbl.setText(nAvb+"");
        
    }
    
}
